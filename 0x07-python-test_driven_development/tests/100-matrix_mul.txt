Test cases for matrix_mul function 
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2]], [[1, 2], [3, 4]])
[[7, 10]]
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 52, in matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[1, 2]], [[1, 2]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 52, in matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[4]], [[1]])
[[4]]
>>> matrix_mul([[4]], [[]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 44, in matrix_mul
    raise ValueError("m_b can't be empty")
ValueError: m_b can't be empty
>>> matrix_mul([[]], [[3]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 34, in matrix_mul
    raise ValueError("m_a can't be empty")
ValueError: m_a can't be empty
>>> matrix_mul([[2.5,4.3]], [[3],[1]])
[[11.8]]
>>> matrix_mul([[2.5, "bashar"]], [[3],[1]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 39, in matrix_mul
    raise TypeError("m_a should contain only integers or floats")
TypeError: m_a should contain only integers or floats
>>> matrix_mul([], [[3],[1]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 22, in matrix_mul
    raise ValueError("m_a can't be empty")
ValueError: m_a can't be empty
>>> matrix_mul([4], [[1, 2], [3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 33, in matrix_mul
    raise TypeError("m_a must be a list of lists")
TypeError: m_a must be a list of lists
>>> matrix_mul([[4]], [1])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 43, in matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists
>>> matrix_mul([[4], [2.4, 5.6]], [[1, 2], [3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 37, in matrix_mul
    raise TypeError("each row of m_a must be of the same size")
TypeError: each row of m_a must be of the same size
>>> matrix_mul([[4, 6], [2.4, 5.6]], [[1], [3, 4]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 47, in matrix_mul
    raise TypeError("each row of m_b must be of the same size")
TypeError: each row of m_b must be of the same size
>>> matrix_mul("bashar", [[1]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 16, in matrix_mul
    raise TypeError("m_a must be a list")
TypeError: m_a must be a list
>>> matrix_mul([[1]], "bashar")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bashar/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 19, in matrix_mul
    raise TypeError("m_b must be a list")
TypeError: m_b must be a list
>>> matrix_mul([[1]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
>>> matrix_mul()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

